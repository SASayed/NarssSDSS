# The domain of your ogp site.  This value is used for CORS and other
# security measures
#localhost is just a placeholder; you need to put in the actual domain
ogp.domain=http://geoportal.narss.sci.eg

# if you have css and js files to localize your ogp site, you can reference
# them here
#example:
#ogp.cssLocalized=resources/css/localizeTufts.css
ogp.cssLocalized=
ogp.jsLocalized=

# default is OpenGeoportal
#primary is the main text color (default black) and offset will have the css class offsetColor
ogp.pageTitle.primary=NARSS
ogp.pageTitle.offset=

# comma separated list of repository ids (see repositories.properties)
# that will appear in the repositories drop down 
# and will be queried by solr 
# you can specify "all" for defaultSelected or particular repository ids
#ogp.repositories=narss,tufts,harvard,berkeley,mit,massgis
#ogp.repositories.defaultSelected=all
ogp.repositories=narss
ogp.repositories.defaultSelected=narss

ogp.sensors=egyptsat1,spot4,zy3
ogp.sensors.defaultSelected=

# to use google analytics and link shortener and geocoder, you need
# your own api keys
apikey.analytics=
apikey.google=


# the url given to the web browser so that it can query solr directly
# if .internal is blank the external value will be used internally as well
# By default, this value will point to the Tufts production solr instance
# .external needs to be a web accessible url
# note: currently ogp will use only /select and /terms
solr.url.internal=http://geoportal.narss.sci.eg:8983/solr
solr.url.external=http://geoportal.narss.sci.eg:8983/solr
#solr.url.external=http://localhost:8080/solr


# if you are using ogp to proxy download and preview of layers, set it
# up here.  (form is: proxy.${repository id}.*)
#proxy.tufts.accessLevel=restricted
#proxy.tufts.accessLevel=public

proxy.narss.accessLevel=restricted
#proxy.narss.accessLevel=public

#specifying "geoserver" expands to wms, wfs, and wcs endpoint mappings
#this is just a placeholder.. input the ip address of the map server to proxy
#in the example case:
#Ex:
#	proxy.tufts.geoserver.internal=http://127.0.0.1:8580
#	proxy.tufts.geoserver.external=restricted
# 
# the path /restricted/wms maps to http://127.0.0.1:8580/wms , etc.

#proxy.tufts.geoserver.internal=http://localhost:8080/geoserver
#proxy.tufts.geoserver.external=http://localhost:8080/geoserver
#proxy.tufts.geoserver.username=admin
#proxy.tufts.geoserver.password=geoserver

proxy.narss.geoserver.internal=http://geoportal.narss.sci.eg:8080/geoserver
proxy.narss.geoserver.external=http://geoportal.narss.sci.eg:8080/geoserver
proxy.narss.geoserver.username=admin
proxy.narss.geoserver.password=geoserver

# this should eventually go in an auth module, I think.
#login.repository=tufts
login.repository=narss
#'form' or 'iframe'
login.type=form
#'login' for local form (ldap or default username and password)
#'weblogin' for noop iframe login (external web form auth with no deep Spring Security integration)
#'restricted/weblogin' for iframe login (external web form auth with deep Spring Security integration [CAS, potentially Shib])
login.url=login/login?
login.secureDomain=http://geoportal.narss.sci.eg:81
#if you're using the nop iframe login, you'll need to uncomment these values and insert appropriate values (you can just use the ones in
#the default authenticationManager (see security-app-context.xml)
#login.nop.user=user
#login.nop.password=jumbo

# every ${cleanupInterval} milliseconds, files older than ${maxFileAge} minutes are
# deleted from the download folder java.temp/${ogp.downloadDir}
ogp.downloadDir=ogpdownload

styleSheet.fgdc=WEB-INF/xml/FGDC_V2_a.xsl
styleSheet.iso19139=WEB-INF/xml/isoBasic.xsl

cleanupInterval=30000
maxFileAge=240

# maximum memory for the initial ImageBuffer in the ImageCompositor in MB's
# this will be an uncompressed array of ints representing pixels.  To composite,
# the compositor will need about twice this amount of heap space.
# 20 MB roughly equates to an image of 2289 pixels sq.
maxImageSize=20

threadPool.executor=5-10
threadPool.scheduler=1

connectionPool.maxTotal=100
connectionPool.maxPerRoute=10

jdbc.driver=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/activiti
jdbc.username=root
jdbc.password=root
activit.url=http://geoportal.narss.sci.eg:80
activiti.process.name=Satellite_Image_Request
activiti.download.name=Download_Process
activiti.username=amr
activiti.password=admin
image.request.page.url=http://geoportal.narss.sci.eg:81/form/ImageOrder.php?view=geoportal
download.location=D:/Compressed/

#Mail configurations
#1-SMTP configurations
mail.smtp.host=mail.narss.sci.eg
mail.smtp.port=465
mail.smtp.auth=true
mail.smtp.socketFactory.port=465
mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory

#2-Sender configurations
mail.sender.username=it-geo@narss.sci.eg
mail.sender.password=123456

#3-Mail administration staff configurations
mail.admin.username=eman.abdelfatah@narss.sci.eg
mail.cc.username=heba.alaa@narss.sci.eg

#Download/Admin panle links
download.link.url=http://geoportal.narss.sci.eg:81/NARSS-Admin/Download/download.php?f=
admin.panle.link.url=https://geoportal.narss.sci.eg/NARSS-admin/